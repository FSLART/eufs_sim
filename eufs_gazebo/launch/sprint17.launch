<?xml version="1.0"?>
<launch>

  <!-- roslaunch arguments -->
  <env name="GAZEBO_MODEL_PATH" value="$(find eufs_description)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find eufs_description)"/>
  <arg name="namespace" default="eufs"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="cmd_timeout" default="0.5"/>
  <arg name="use_robot_control_odom" default="true"/>

  <!-- Vehicle pose -->
  <arg name="x" default="-43.0"/>
  <arg name="y" default="35"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <!-- eufs_control launch file -->
  <include file="$(find eufs_gazebo)/launch/eufs_control.launch" />
  
  <!-- Launch world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find eufs_gazebo)/worlds/sprint17.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param command="$(find xacro)/xacro '$(find eufs_description)/robots/ads-dv.urdf.xacro' --inorder" name="robot_description"/>

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node args="-urdf -model eufs -param robot_description 
    -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" 
    name="urdf_spawner" output="screen" pkg="gazebo_ros" respawn="false" type="spawn_model"/>
  
  <include file="$(find robot_control)/launch/robot_control.launch">
    <arg name="publish_odom_tf" value="$(arg use_robot_control_odom)"/>
  </include>

  <!-- Only launch if robot_control odom is used -->
  <node 
    pkg="tf" 
    type="static_transform_publisher" 
    name="map_broadcaster" 
    args="$(arg x) $(arg y) 0 0 0 0 1 map odom 100" 
    unless="$(eval arg('use_robot_control_odom') == false)"
    />

  <!-- Only launch if robot_control odom is not used -->
  <group if="$(eval arg('use_robot_control_odom') == false)">
    <!-- Python script to republish ground truth -->
    <node 
      name="ground_truth_republisher"
      pkg="eufs_gazebo"
      type="ground_truth_republisher.py"
      output="screen"
    />

    <node 
      name="message_to_tf" 
      pkg="message_to_tf" 
      type="message_to_tf" 
      output="screen" 
      args="/ground_truth/state"
    />
  </group>

  <include file="$(find eufs_gazebo)/launch/extractor.launch">
    <arg name ="track_name" value="Sprint17Details.csv"/>
    <arg name ="view_distance" value="15"/>
  </include>

</launch>